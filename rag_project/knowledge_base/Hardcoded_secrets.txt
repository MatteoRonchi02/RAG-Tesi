# NAME OF SECURITY SMELL
Hardcoded secrets
# DEFINITION OF SECURITY SMELL
Hardcoded secrets refer to sensitive information, such as passwords, API keys, access tokens, or encryption keys, that are directly embedded within the source code of an application. In the context of microservices, where numerous independent services often require various credentials to interact with databases, other services, or external APIs, the risk of hardcoding these secrets becomes amplified. Modern applications, especially those built with a microservices architecture, rely on a multitude of interconnected components, including databases, cloud infrastructure, and third-party services. To enable secure interaction between these components, various keys and authentication methods are employed.. For instance, a microservice might need a database password to query data or an API key to connect with an external service. The sheer number of these secrets in a complex microservices application increases the likelihood of developers inadvertently hardcoding them during development or testing, potentially forgetting to remove them before deployment. Secrets can also be unintentionally stored in a repository's commit history. The dangers of exposed secrets in source code are significant. 1  If an attacker gains access to these secrets, they could potentially access applications, machines, APIs, and sensitive data, leading to severe consequences such as data breaches, unauthorized actions, service disruptions, or even complete system compromise.. Attackers can misuse exposed API keys to perform unauthorized actions, flood services with requests, or harvest private data.


